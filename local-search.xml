<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>记录一下装arch遇到的一些问题</title>
    <link href="/2022/01/20/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E8%A3%85arch%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <url>/2022/01/20/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E8%A3%85arch%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>Arch wiki yyds！</p><p>这篇主要记录一下自己遇到问题（还是应该以wiki为主）。<span id="more"></span></p><h4 id="1-双系统"><a href="#1-双系统" class="headerlink" title="1    双系统"></a>1    双系统</h4><p>我是windows和arch linux装在一块硬盘里，除了要装grub，efibootmgr以外，还要装ntfs-3g和os-prober。ntfs-3g是读写ntfs的驱动，os-prober用于检测windows系统。</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">sudo pacman -S os-prober ntfs-3g<br></code></pre></td></tr></table></figure><p>arch wiki指出要<a href="https://wiki.archlinux.org/title/GRUB#Configuration">编辑/etc/default/grub</a>，将<code>GRUB_DISABLE_OS_PROBER=false</code>注释去掉才能，检测到windows系统。</p><p>接下来执行，<em>esp</em>指的是你的启动分区，比如我的就是/boot。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grub-install --target=x86_64-efi --efi-directory=esp --bootloader-id=GRUB<br></code></pre></td></tr></table></figure><p>接下来要生成grub.cfg文件，由于双系统启动，所以先要将windows盘挂上。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mount /dev/nvme0n1p4 /mnt/windows<br>grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><p>然后reboot就可以看到两个启动项了。</p><p><del>虽然我第一次装的时候死活搞不出Arch启动项，可以看<a href="https://wiki.archlinux.org/title/GRUB#GNU/Linux">wiki</a>自己写一个。</del></p><h4 id="2-键盘"><a href="#2-键盘" class="headerlink" title="2    键盘"></a>2    键盘</h4><p>我用外接键盘，当我按下F区键时，没有应答。应该是要禁用fn键。</p><p>网上一顿乱搜，找到了<a href="https://www.hashbangcode.com/article/turning-or-fn-mode-ubuntu-linux">教程</a>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo options hid_apple fnmode=0 | sudo tee -a /etc/modprobe.d/hid_apple.conf<br></code></pre></td></tr></table></figure><p>reboot就完事了。</p><h4 id="3-git"><a href="#3-git" class="headerlink" title="3    git"></a>3    git</h4><p>使用git clone时出现报错，以及之前git push的时候也会出现这个情况。在之前网上简单搜索了一下，是因为开了代理。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Cloning <span class="hljs-keyword">into</span> <span class="hljs-string">&#x27;xxxxx&#x27;</span>...<br>kex_exchange_identification: Connection closed <span class="hljs-keyword">by</span> remote host<br>Connection closed <span class="hljs-keyword">by</span> <span class="hljs-number">20.205</span><span class="hljs-number">.243</span><span class="hljs-number">.166</span> port <span class="hljs-number">22</span><br>fatal: Could <span class="hljs-keyword">not</span> <span class="hljs-built_in">read</span> <span class="hljs-built_in">from</span> remote repository.<br><br>Please make sure you have <span class="hljs-keyword">the</span> correct access rights <span class="hljs-keyword">and</span> <span class="hljs-keyword">the</span> repository exists.<br></code></pre></td></tr></table></figure><p>现在我嫌开关代理太麻烦了，经过一顿搜索，找到了一个其他的方法。</p><p>在<code>~/.ssh</code>下创建<code>config</code>文件。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Host github<span class="hljs-selector-class">.com</span><br> Hostname ssh<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.com</span><br> Port <span class="hljs-number">443</span><br></code></pre></td></tr></table></figure><p>具体啥原理我也不知道，等我学了计算机网络再来吧（）。</p><h4 id="4-开机卡在-dev-nvme0n1p6-clean-files-blocks"><a href="#4-开机卡在-dev-nvme0n1p6-clean-files-blocks" class="headerlink" title="4    开机卡在/dev/nvme0n1p6 clean */* files */* blocks"></a>4    开机卡在<code>/dev/nvme0n1p6 clean */* files */* blocks</code></h4><p>网上查了一下，应该是检查文件。网上的一位老哥给出了一个解决方法，进入<code>grub</code>的时候，按<code>e</code>，将<code>quiet</code>，我认为这应该解决不了问题，但还是尝试了一下。结果是启动的时候，找不到有线网卡，恩是找了90s。</p><blockquote><p>a starting job is running for /sys/subsystem/net/devices/enp1s0 (**/ 1min 30s)</p></blockquote><p>然后再一顿搜索，找到一个<a href="https://bbs.archlinux.org/viewtopic.php?id=222733">相关问题</a>。</p><p>用<code>find  /etc/systemd</code>查找一下，发现果然有一个。</p><p>用<code>ip link</code>对照了一下，应该是打错，，</p><p>其实替换了以后，还是会出现上面那个字样，但是很快就检查完了XD。</p><h4 id="5-wpa-supplicant相关问题"><a href="#5-wpa-supplicant相关问题" class="headerlink" title="5    wpa_supplicant相关问题"></a>5    wpa_supplicant相关问题</h4><p>首先是<code>wpa_cli</code>下<code>scan</code>没有效果，</p><p>网上也找到了<a href="https://bbs.archlinux.org/viewtopic.php?id=234877">解决方法</a>，</p><p><code>wpa_cli</code>指定的interface出现了问题，每次输入命令的时候指定就好了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo wpa_cli -i wlp2s0<br></code></pre></td></tr></table></figure><h4 id="6-浏览器画面撕裂问题"><a href="#6-浏览器画面撕裂问题" class="headerlink" title="6    浏览器画面撕裂问题"></a>6    浏览器画面撕裂问题</h4><p>gpu是amd的核显，驱动也装了。<a href="https://www.jianshu.com/p/01d41ced5903">解决方案</a></p><p>创建文件<code>/etc/X11/xorg.conf.d/20-amdgpu.conf</code>，添加一下内容，即可</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-meta">Section</span> <span class="hljs-string">&quot;Device&quot;</span><br>     Identifier <span class="hljs-string">&quot;AMD&quot;</span><br>     Driver <span class="hljs-string">&quot;amdgpu&quot;</span><br>     <span class="hljs-meta">Option</span> <span class="hljs-string">&quot;TearFree&quot;</span> <span class="hljs-string">&quot;true&quot;</span><br>EndSection<br></code></pre></td></tr></table></figure><h4 id="7-触摸板设置"><a href="#7-触摸板设置" class="headerlink" title="7    触摸板设置"></a>7    触摸板设置</h4><p>触摸板轻点不能单击，以及右键失灵。</p><p>首先要下载<code>libinput</code>，</p><p>创建<code>/etc/X11/xorg.conf.d/30-touchpad.conf</code>文件，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">Section &quot;InputClass&quot;<br>  Identifier &quot;touchpad&quot;<br>  Driver &quot;libinput&quot;<br>  MatchIsTouchpad &quot;on&quot;<br>  OPtion &quot;Tapping&quot; &quot;on&quot;<br>  Option &quot;TappingButtonMap&quot; &quot;lmr&quot;<br>EndSection<br></code></pre></td></tr></table></figure><p><code>&quot;Tapping&quot;</code>应该指的是轻触单击，</p><p><code>&quot;TappingButtonMap&quot;</code>设置单指二指三指这些的，<code>&quot;lmr&quot;</code>指的是<code>left``middle``right</code>对应单指二指三指。</p><h4 id="8-DNS"><a href="#8-DNS" class="headerlink" title="8    DNS"></a>8    DNS</h4><p>经常出现无法访问某些网站的情况，即便开了代理，如 <a href="https://sp18.datastructur.es/">https://sp18.datastructur.es/</a></p><p>修改DNS方案很多，一开始我直接修改<code>/etc/resolv.conf</code>，修改完<code>cat</code>还是原来的，看了wiki才知道<code>dhcpcd</code>会自动覆盖<code>resolv.conf</code>，发现<code>chattr</code>也不太用的明白……就选择了让dhcpcd指定分配DNS。<a href="https://wiki.archlinux.org/title/Dhcpcd#/etc/resolv.conf">详见wiki</a></p><p>编辑<code>/etc/dhcpcd.conf</code>，在最后添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">static domain_name_servers=8.8.8.8 8.8.4.4<br></code></pre></td></tr></table></figure><p>即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">dig bilibili.com<br></code></pre></td></tr></table></figure><p>可以检查一下。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C语言字符串&amp;const踩坑</title>
    <link href="/2021/12/21/C%E8%AF%AD%E8%A8%80%E5%AD%97%E7%AC%A6%E4%B8%B2&amp;const%E8%B8%A9%E5%9D%91/"/>
    <url>/2021/12/21/C%E8%AF%AD%E8%A8%80%E5%AD%97%E7%AC%A6%E4%B8%B2&amp;const%E8%B8%A9%E5%9D%91/</url>
    
    <content type="html"><![CDATA[<p>由于我还是刚入门的…本篇博客可能会有错误，欢迎各位大佬指正。<span id="more"></span></p><h4 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h4><p>你院C语言课程发了一张2019年的卷子，上面有这样一道题：</p><blockquote><p>设有声明 <code>char *const sp[2] = &#123;&quot;I&quot;, &quot;Love&quot;&#125;; const char *const p[2] = &#123;&quot;XXXX&quot;, &quot;SCSE&quot;&#125;;</code>则下列说法正确的是 [  ]</p><p>4个选项都是关于<code>sp[0][0]</code>与<code>p[0][0]</code>是否能被改变这个问题。</p></blockquote><p>我老菜鸡了，选了<code>sp[0][0]</code>能改，但是<code>p[0][0]</code>不能改，果不其然错了。</p><p>其实我内心是不服的，毕竟我在电脑上跑过。</p><p>借这个机会，好好梳理一下<code>const</code>这个玩意，顺便练习写一下markdown格式的文章XD。</p><!-- more --><h4 id="const与指针"><a href="#const与指针" class="headerlink" title="const与指针"></a><code>const</code>与指针</h4><p>我们都知道</p><p><code>const a[2] = &#123;1, 2&#125;;</code></p><p>代表a这个数组的值是无法改变的。</p><p>但是当<code>const</code> 和指针在一起时，事情开始变得有些复杂了。</p><figure class="highlight c"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">int</span> n = <span class="hljs-number">2</span>, m = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> * a = &amp;n;<br><span class="hljs-keyword">int</span> * <span class="hljs-keyword">const</span> b = &amp;n;<br>*a = <span class="hljs-number">1</span>;<span class="hljs-comment">//不合法</span><br>b = &amp;m;<span class="hljs-comment">//不合法</span><br></code></pre></td></tr></table></figure><p>通过<code>a</code>不能修改<code>n</code>的值，是常量指针；</p><p><code>b</code>所指向的地址，也就是<code>b</code>的值不能改变，是指针常量。</p><p>翁恺老师曾经讲过永远是<code>const</code>后面那个东西不能改变。</p><p>当一切变得复杂起来时，这也适用。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">char</span> * <span class="hljs-keyword">const</span> str1[<span class="hljs-number">2</span>] = &#123;<span class="hljs-string">&quot;ABC&quot;</span>, <span class="hljs-string">&quot;abc&quot;</span>&#125;;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> * str2[<span class="hljs-number">2</span>] = &#123;<span class="hljs-string">&quot;123&quot;</span>, <span class="hljs-string">&quot;321&quot;</span>&#125;;<br></code></pre></td></tr></table></figure><p>首先<code>str1</code>，<code>str2</code>是指针数组，数组里面存放着指向<code>char</code>类型的指针。</p><p>根据翁恺老师所讲的，<code>str1[2]</code>不能改变，也就是指向的地址不能被改变；<code>*str2[2]</code>不能改变，也就是指向的字符串不能被改变。</p><h4 id="回到问题"><a href="#回到问题" class="headerlink" title="回到问题"></a>回到问题</h4><p>说到这里，好像上面那道题的答案已经呼之欲出了，不就是「<code>sp[0][0]</code>能改，但是<code>p[0][0]</code>不能改」吗？</p><p>我当时也是这么想的，并且在机子上编译了一下，发现与我的预期相符，于是放心地填上了答案XD。</p><p>今天，我又重新研究了一下，发现运行一下就会出现<code>Segementation fault</code>…</p><p>上面的说法并没有错，但是出现了另外一个问题。</p><p>考虑下面这段代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">char</span> * str = <span class="hljs-string">&quot;Hello World&quot;</span>;<br>str[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;h&#x27;</span>;<br></code></pre></td></tr></table></figure><p>在这种情况下，也会出现<code>Segementation fault</code>。</p><p>经过一番查阅，在stack overflow论坛上找到了<a href="https://stackoverflow.com/questions/15970171/why-can-i-assign-a-string-literals-to-a-char-pointer">答案</a>。</p><blockquote><p>String literals are, indeed, constant. </p></blockquote><p><code>String literals</code>被看作常量，是<code>const</code>自然不能被修改。</p><p>好啦，这个问题就解决啦，希望C语言能考高分XD。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/12/18/Hello-World/"/>
    <url>/2021/12/18/Hello-World/</url>
    
    <content type="html"><![CDATA[<p>墨迹好久，终于开通blog。</p><p>在这里记录一下生活吧！</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
